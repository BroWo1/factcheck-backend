# Generated by Django 5.2 on 2025-07-02 15:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FactCheckSession",
            fields=[
                (
                    "session_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_input", models.TextField()),
                (
                    "uploaded_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="fact_check_images/"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("analyzing", "Analyzing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "final_verdict",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("true", "True"),
                            ("likely", "Likely True"),
                            ("uncertain", "Uncertain"),
                            ("suspicious", "Suspicious"),
                            ("false", "False"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("analysis_summary", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatGPTInteraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("initial_analysis", "Initial Analysis"),
                            ("claim_extraction", "Claim Extraction"),
                            ("source_evaluation", "Source Evaluation"),
                            ("final_verdict", "Final Verdict"),
                        ],
                        max_length=30,
                    ),
                ),
                ("prompt", models.TextField()),
                ("response", models.TextField()),
                ("model_used", models.CharField(default="gpt-4", max_length=50)),
                ("tokens_used", models.IntegerField(blank=True, null=True)),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gpt_interactions",
                        to="fact_checker.factchecksession",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SearchQuery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query_text", models.CharField(max_length=500)),
                (
                    "search_type",
                    models.CharField(
                        choices=[
                            ("google", "Google Search"),
                            ("publisher_specific", "Publisher Specific"),
                            ("fact_check", "Fact Check Sites"),
                            ("academic", "Academic Sources"),
                        ],
                        default="google",
                        max_length=30,
                    ),
                ),
                ("results_count", models.IntegerField(default=0)),
                ("successful", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_queries",
                        to="fact_checker.factchecksession",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Source",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField(max_length=2000)),
                ("title", models.CharField(blank=True, max_length=500, null=True)),
                ("publisher", models.CharField(blank=True, max_length=200, null=True)),
                ("author", models.CharField(blank=True, max_length=200, null=True)),
                ("credibility_score", models.FloatField(blank=True, null=True)),
                ("content_summary", models.TextField(blank=True, null=True)),
                ("extracted_claims", models.JSONField(blank=True, default=list)),
                ("publish_date", models.DateTimeField(blank=True, null=True)),
                ("accessed_at", models.DateTimeField(auto_now_add=True)),
                ("is_primary_source", models.BooleanField(default=False)),
                ("supports_claim", models.BooleanField(blank=True, null=True)),
                ("relevance_score", models.FloatField(blank=True, null=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sources",
                        to="fact_checker.factchecksession",
                    ),
                ),
            ],
            options={
                "ordering": ["-relevance_score", "-credibility_score"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.IntegerField()),
                (
                    "step_type",
                    models.CharField(
                        choices=[
                            ("topic_analysis", "Topic Analysis"),
                            ("publisher_research", "Publisher Research"),
                            ("search", "Search Sources"),
                            ("crawl", "Crawl Content"),
                            ("verification", "Verification"),
                            ("final_analysis", "Final Analysis"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("result_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_steps",
                        to="fact_checker.factchecksession",
                    ),
                ),
            ],
            options={
                "ordering": ["step_number"],
                "unique_together": {("session", "step_number")},
            },
        ),
    ]
